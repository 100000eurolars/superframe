!function(e){function t(r){if(i[r])return i[r].exports;var n=i[r]={exports:{},id:r,loaded:!1};return e[r].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var i={};return t.m=e,t.c=i,t.p="",t(0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerPrimitive("a-log",{defaultComponents:{geometry:{primitive:"plane"},material:{color:"#111"},text:{color:"lightgreen"}}}),AFRAME.registerSystem("log",{init:function(){var e=this.loggers=[];AFRAME.log=function(t,i){e.forEach(function(e){e.receiveLog(t,i)})}},registerLogger:function(e){this.loggers.push(e)},unregisterLogger:function(e){this.loggers.splice(this.loggers.indexOf(e),1)}}),AFRAME.registerComponent("log",{schema:{channel:{type:"string"},filter:{type:"string"},max:{default:100}},init:function(){this.logs=[],this.system.registerLogger(this)},play:function(){var e=this;this.el.sceneEl.addEventListener("log",function(t){t.detail&&e.receiveLog(t.detail.message,t.detail.channel)})},receiveLog:function(e,t){var i=this.data;"string"!=typeof e&&(e=JSON.stringify(e)),i.channel&&t&&i.channel!==t||i.filter&&e.indexOf(i.filter)===-1||(this.logs.push(e),i.max&&this.logs.length>i.max&&this.logs.shift(),this.el.setAttribute("text",{value:this.logs.join("\n")}))},remove:function(){this.el.removeAttribute("text"),this.system.unregisterLogger(this)}})}]);