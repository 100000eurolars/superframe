!function(e){function t(s){if(i[s])return i[s].exports;var n=i[s]={exports:{},id:s,loaded:!1};return e[s].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var i={};return t.m=e,t.c=i,t.p="",t(0)}([function(e,t){function s(e,t){var i;for(e.length=0,i=0;i<t.length;i++)e[i]=t[i]}if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("aabb-collider",{schema:{interval:{default:80},objects:{default:""}},init:function(){this.clearedIntersectedEls=[],this.boundingBox=new THREE.Box3,this.boxMax=new THREE.Vector3,this.boxMin=new THREE.Vector3,this.intersectedEls=[],this.objectEls=[],this.newIntersectedEls=[],this.prevCheckTime=void 0,this.previousIntersectedEls=[],this.hitStartEventDetail={intersectedEls:this.newIntersectedEls}},update:function(e){var t,s=this.el,n=this.data;if(e.objects!==n.objects)for(t=s.sceneEl.querySelectorAll(n.objects),i=0;i<t.length;i++)t[i]!==s&&this.objectEls.push(t[i]);else this.objectEls=s.sceneEl.children},tick:function(e){var t,i,n=this.boundingBox,r=this.clearedIntersectedEls,o=this.intersectedEls,h=this.el,c=this.newIntersectedEls,a=this.objectEls,l=this.prevCheckTime,d=this.previousIntersectedEls;if(!(l&&e-l<data.interval)&&(this.prevCheckTime=e,i=h.getObject3D("mesh"))){for(n.setFromObject(i),this.boxMin.copy(n.min),this.boxMax.copy(n.max),s(d,o),o.length=0,t=0;t<a.length;t++)this.isIntersecting(a[t])&&o.push(a[t]);for(c.length=0,t=0;t<o.length;t++)d.indexOf(o[t])===-1&&c.push(o[t]);for(r.length=0,t=0;t<d.length;t++)o.indexOf(d[t])===-1&&(d[t].hasAttribute("aabb-collider")||(d[t].emit("hitend"),d[t].emit("raycaster-intersected-cleared")),r.push(d[t]));for(t=0;t<c.length;t++)c[t].hasAttribute("aabb-collider")||(c[t].emit("hitstart"),c[t].emit("raycaster-intersected"));r.length&&(h.emit("hitend"),h.emit("raycaster-intersection-cleared")),c.length&&(h.emit("hitstart",this.hitStartEventDetail),h.emit("raycaster-intersection"))}},isIntersecting:function(){var e=new THREE.Box3;return function(t){var i,s,n;if(i=t.getObject3D("mesh"))return e.setFromObject(i),s=e.min,n=e.max,this.boxMin.x<=n.x&&this.boxMax.x>=s.x&&this.boxMin.y<=n.y&&this.boxMax.y>=s.y&&this.boxMin.z<=n.z&&this.boxMax.z>=s.z}}()})}]);