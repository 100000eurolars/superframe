!function(e){function t(s){if(n[s])return n[s].exports;var r=n[s]={exports:{},id:s,loaded:!1};return e[s].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("haptics",{dependencies:["tracked-controls"],schema:{actuatorIndex:{default:0},dur:{default:100},enabled:{default:!0},events:{type:"array"},intensity:{default:1}},multiple:!0,init:function(){var e=(this.data,this);this.pulse=this.pulse.bind(this),this.el.addEventListener("controllerconnected",function(){setTimeout(function(){e.gamepad=e.el.components["tracked-controls"].controller,e.gamepad.hapticActuators.length&&e.addEventListeners()})})},remove:function(){this.removeEventListeners()},pulse:function(){var e,t=this.data;t.enabled&&(e=this.gamepad.hapticActuators[t.actuatorIndex],e.pulse(t.intensity,t.dur))},addEventListeners:function(){var e,t=this.data;for(e=0;e<t.events.length;e++)this.el.addEventListener(t.events[e],this.pulse)},removeEventListeners:function(){var e,t=this.data;for(e=0;e<t.events.length;e++)this.el.removeEventListener(t.events[e],this.pulse)}})}]);