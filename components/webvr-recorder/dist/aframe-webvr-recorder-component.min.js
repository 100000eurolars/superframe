!function(t){function e(r){if(o[r])return o[r].exports;var n=o[r]={i:r,l:!1,exports:{}};return t[r].call(n.exports,n,n.exports,e),n.l=!0,n.exports}var o={};return e.m=t,e.c=o,e.i=function(t){return t},e.d=function(t,e,o){Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var o=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(o,"a",o),o},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=0)}([function(t,e){function o(t,e){t&&Object.keys(s).forEach(o=>{t.addEventListener(o,t=>{const r=[];s[o].props.forEach(e=>{r.push(t.detail[e])}),e.push([s[o].id,r]),console.log("Recorded event",o+".")})})}function r(t,e){t.setAttribute("position",e.p),t.setAttribute("rotation",e.r)}function n(t,e){e.forEach(e=>{const o=l[e[0]],r=e[1],n={};r.forEach((t,e)=>{n[s[o].props[e]]=t}),console.log("Replay emitted",o+"."),t.emit(o,n)})}function i(){var t=document.createElement("a");return t.innerHTML="Download Recording",t.style.background="#333",t.style.color="#FAFAFA",t.style.display="none",t.style.padding="10px",t.style.position="fixed",t.style.bottom=0,t.style.left=0,t.style.zIndex=9999,t}if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");const s={axismove:{id:0,props:["axis"]},buttonchanged:{id:1,props:["id","state"]},buttondown:{id:2,props:["id","state"]},touchstart:{id:3,props:["id","state"]},touchend:{id:4,props:["id","state"]}},l={0:"axismove",1:"buttonchanged",2:"buttondown",3:"touchstart",4:"touchend"};AFRAME.registerComponent("webvr-recorder",{schema:{controller1:{type:"string"},controller2:{type:"string"},source:{default:"webvr-recorder.json"}},init:function(){const t=this.data,e=this.el;this.record=[],this.replayRecord=null,this.camera=null,this.controller1=null,this.controller2=null,this.controller1Events=[],this.controller2Events=[],this.downloadLink=i(),this.downloadLink.setAttribute("download",t.source),document.body.appendChild(this.downloadLink),e.addEventListener("renderstart",()=>{this.camera=e.camera.el,this.controller1=e.querySelector(t.controller1),this.controller2=e.querySelector(t.controller2)}),localStorage.getItem("webvr-recorder")?(console.log("Loaded recording from localStorage['webvr-recorder']."),this.record=JSON.parse(localStorage.getItem("webvr-recorder"))):(new THREE.XHRLoader).load(t.source,t=>{console.log("Loaded recording from",t.source+"."),this.record=JSON.parse(t)},()=>{},e=>{console.log("No recording found at",t.source,". Press `r` to start recording.")}),window.addEventListener("keyup",r=>{if(82===r.keyCode&&e.hasLoaded){if(this.isRecording){var n=JSON.stringify(this.record);return console.log("Stopped recording."),this.isRecording=!1,console.log(n),console.log("Saving to localStorage and ",t.source),localStorage.setItem("webvr-recorder",n),this.downloadLink.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(n)),void(this.downloadLink.style.display="block")}if(this.isReplaying)return console.log("Paused replay."),void(this.isReplaying=!1);if(this.replayRecord&&this.replayRecord.length)return console.log("Resuming replay."),void(this.isReplaying=!0);if(this.record.length)return console.log("Starting replay!"),this.isReplaying=!0,void(this.replayRecord=AFRAME.utils.clone(this.record));o(this.controller1,this.controller1Events),o(this.controller2,this.controller2Events),console.log("Starting recording!"),console.log(this.camera,this.controller1,this.controller2),this.isRecording=!0}})},tick:function(t,e){this.isRecording?this.recordTick(t):this.isReplaying&&this.replayTick(t)},recordTick:function(t){this.record.push({time:t,c:{p:this.camera.getAttribute("position"),r:this.camera.getAttribute("rotation")},c1:{e:this.controller1Events,p:this.controller1.getAttribute("position"),r:this.controller1.getAttribute("rotation")},c2:{e:this.controller2Events,p:this.controller2.getAttribute("position"),r:this.controller2.getAttribute("rotation")}}),this.controller1Events=[],this.controller2Events=[]},replayTick:function(t){const e=this.replayRecord.shift();return e?(r(this.camera,e.c),r(this.controller1,e.c1),n(this.controller1,e.c1.e),r(this.controller2,e.c2),void n(this.controller2,e.c2.e)):(console.log("Finished replaying."),void(this.isReplaying=!1))}})}]);